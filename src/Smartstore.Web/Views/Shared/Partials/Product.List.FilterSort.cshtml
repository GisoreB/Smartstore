@using Smartstore.Web.Models.Catalog;
@using Smartstore.Core.Catalog.Products;

@model IListActions

<div sm-if="Model.AllowFiltering" class="artlist-action artlist-action--filter d-lg-none">
    <button class="btn btn-primary w-100 justify-content-between btn-toggle-filter-widget" data-title="@T("Products.ToFilterAndSort")">
        <span>@T("Products.ToFilterAndSort")</span>
        <i class="fa fa-fw fa-sliders-h"></i>
    </button>
</div>

<div sm-if="Model.AllowSorting" class="artlist-action artlist-action--sort d-none d-lg-flex">
    <div id="artlist-action-sort" class="dropdown">
        <button class="btn btn-secondary btn-artlist-action dropdown-toggle fwn" data-toggle="dropdown" title="@T("Products.SortByX", Model.CurrentSortOrderName)">
            <span>@Html.Raw(T("Products.SortByX", $"<span class='fwm'>{Model.CurrentSortOrderName}</span>"))</span>
        </button>
        <div class="dropdown-menu">
            @foreach (var sort in Model.AvailableSortOptions)
            {
                var sortName = (Model is ProductSummaryModel && sort.Key == (int)ProductSortingEnum.Relevance) ? Model.RelevanceSortOrderName : null;
                var isSelected = sort.Key == Model.CurrentSortOrder;
                <a href="@Display.ModifyQueryString(null, $"?o={sort.Key}", removeParamName: "i")" class="dropdown-item" attr-class='(isSelected, "fwm")'>
                    @(sortName ?? sort.Value)
                </a>
            }
        </div>
    </div>
</div>